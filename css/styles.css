/*
=============== 
Fonts
===============
*/
@import url("https://fonts.googleapis.com/css?family=Open+Sans|Roboto:400,700&display=swap");

/*
=============== 
Variables
===============
*/

:root {
  /* dark shades of primary color*/
  --clr-primary-1: hsl(43, 86%, 17%);
  --clr-primary-2: hsl(43, 77%, 27%);
  --clr-primary-3: hsl(43, 72%, 37%);
  --clr-primary-4: hsl(42, 63%, 48%);
  /* primary/main color */
  --clr-primary-5: hsl(42, 78%, 60%);
  /* lighter shades of primary color */
  --clr-primary-6: hsl(43, 89%, 70%);
  --clr-primary-7: hsl(43, 90%, 76%);
  --clr-primary-8: hsl(45, 86%, 81%);
  --clr-primary-9: hsl(45, 90%, 88%);
  --clr-primary-10: hsl(45, 100%, 96%);
  /* darkest grey - used for headings */
  --clr-grey-1: hsl(209, 61%, 16%);
  --clr-grey-2: hsl(211, 39%, 23%);
  --clr-grey-3: hsl(209, 34%, 30%);
  --clr-grey-4: hsl(209, 28%, 39%);
  /* grey used for paragraphs */
  --clr-grey-5: hsl(210, 22%, 49%);
  --clr-grey-6: hsl(209, 23%, 60%);
  --clr-grey-7: hsl(211, 27%, 70%);
  --clr-grey-8: hsl(210, 31%, 80%);
  --clr-grey-9: hsl(212, 33%, 89%);
  --clr-grey-10: hsl(210, 36%, 96%);
  --clr-white: #fff;
  --ff-primary: "Roboto", sans-serif;
  --ff-secondary: "Open Sans", sans-serif;
  --transition: all 0.3s linear;
  --spacing: 0.25rem;
  --radius: 0.5rem;
  --light-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  --dark-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  --max-width: 1170px;
}
/*
=============== 
Global Styles
===============
*/

/* add after and before so pseudo-elements will inherit box sizing as well */
*,
::after,
::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: var(--ff-secondary);
  background: var(--clr-white);
  color: var(--clr-grey-1);
  line-height: 1.5;
  font-size: 0.875rem;
}
ul {
  list-style-type: none;
}
a {
  text-decoration: none;
}
img:not(.nav-logo) {
  width: 100%;
  display: block;
}

h1,
h2,
h3,
h4 {
  letter-spacing: var(--spacing);
  text-transform: capitalize;
  line-height: 1.25;
  margin-bottom: 0.75rem;
  font-family: var(--ff-primary);
}
h1 {
  font-size: 3rem;
}
h2 {
  font-size: 2rem;
}
h3 {
  font-size: 1.25rem;
}
h4 {
  font-size: 0.875rem;
}
p {
  margin-bottom: 1.25rem;
  color: var(--clr-grey-5);
}
@media screen and (min-width: 800px) {
  h1 {
    font-size: 4rem;
  }
  h2 {
    font-size: 2.5rem;
  }
  h3 {
    font-size: 1.75rem;
  }
  h4 {
    font-size: 1rem;
  }
  body {
    font-size: 1rem;
  }
  h1,
  h2,
  h3,
  h4 {
    line-height: 1;
  }
}
/*  global classes */

.btn {
  text-transform: uppercase;
  background: var(--clr-primary-5);
  color: var(--clr-primary-1);
  padding: 0.375rem 0.75rem;
  letter-spacing: var(--spacing);
  display: inline-block;
  font-weight: 700;
  -webkit-transition: var(--transition);
  transition: var(--transition);
  font-size: 0.875rem;
  border: 2px solid transparent;
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  border-radius: var(--radius);
}
.btn:hover {
  color: var(--clr-primary-1);
  background: var(--clr-primary-7);
}
/* section */
.section {
  padding: 5rem 0;
}

.section-center {
  width: 90vw;
  margin: 0 auto;
  max-width: 1170px;
}
@media screen and (min-width: 992px) {
  .section-center {
    width: 95vw;
  }
}
/* added during recording */
/* to create underline styling throughout page */
.underline {
  width: 5rem;
  height: 0.25rem;
  margin-bottom: 1.25rem;
  background: var(--clr-primary-5);
  margin-left: auto;
  margin-right: auto;
}

.section-title {
  margin-bottom: 4rem;
  text-align: center;
}

.bg-grey {
  background: var(--clr-grey-10);
}
/*
=============== 
Navbar
===============
*/
.nav-links {
  display: none;
}

/* centering parent containers */
.nav {
  height: 5rem;
  padding: 1rem;
  display: grid;
  align-items: center;
  transition: var(--transition);
}

.nav-center {
  width: 100%;
  max-width: 1170px;
  margin: 0 auto;
}

.nav-header {
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-items: center;
}

.nav-btn {
  background: transparent;
  border-color: transparent;
  color: var(--clr-primary-5) ;
  font-size: 2rem;
  cursor: pointer;
  justify-self: flex-end;
  padding-right: 1.5rem;
}

@media screen and (min-width: 768px) {
  .nav {
    background: var(--clr-primary-10);
  }

  .nav-btn {
    display: none;
  }

  .nav-links {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    justify-items: center;
    column-gap: 2rem;
    justify-self: end;
  }

  .nav-links a {
    text-transform: capitalize;
    color: var(--clr-grey-1);
    font-weight: bold;
    letter-spacing: var(--spacing);
    transition: var(--transition);
  }

  .nav-links a:hover {
    color: var(--clr-primary-5)
  }

  /* set logo and nav links side by side */
  .nav-center {
    display: grid;
    /* set first column to auto because its an image, we dont want it to stretch */
    grid-template-columns: auto 1fr;
    align-items: center;
  }
}

/* fixed navbar */
.navbar-fixed {
  /* position: sticky; */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background: var(--clr-white);
  z-index: 2;
  box-shadow: var(--light-shadow);
}
/*
=============== 
Sidebar
===============
*/

/* sidebar nav */
.sidebar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--clr-grey-10);
  /* so its on top of everything */
  z-index: 4;
  display: grid;
  /* combines justify-content: center and align-items: center to center element */
  place-items: center;
  transition: var(--transition);
  /* to make mobile sidebar slide off screen */
  transform: translateX(-100%);
}

.show-sidebar {
  /* to toggle between sidebar visibility */
  transform: translateX(0);
}

.sidebar-links {
  text-align: center;
}

.sidebar-links a {
  font-size: 2rem;
  text-transform: capitalize;
  transition: var(--clr-grey-5);
  letter-spacing: var(--spacing);
  display: inline-block;
  margin-bottom: 1.5rem;
  color: var(--clr-grey-1);
}

.sidebar-links a:hover {
  color: var(--clr-primary-5);
}

/* sidebar social icons */
.social-icons {
  display: grid;
  margin-top: 3rem;
  width: 20rem;
  grid-template-columns: repeat(6, 1fr);
  justify-items: center;
}

.social-icon {
  font-size: 1.5rem;
  color: var(--clr-grey-1);
  transition: var(--transition);
}

.social-icon:hover {
  color: var(--clr-primary-5);
}

.close-btn {
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 3rem;
  background: transparent;
  border: transparent;
  transition: --transition;
  color: #bb2525;
  cursor: pointer;
}

.close-btn:hover {
  color: #e66b6b;
}
/*
=============== 
Hero
===============
*/
/* underline added to globals */
.hero .underline {
  margin-bottom: 0.5rem;
  margin-left: 0;
}

.hero-img {
  display: none;
}

.hero {
  background-color: var(--clr-primary-10);
}

/* to give hero height */
.hero-center {
  min-height: calc(100vh - 5rem);
  /* to center heading text; */
  display: grid;
  place-items: center;
}

.hero-info  h4 {
  color: var(--clr-grey-5);
}

.hero-icons {
  justify-items: start;
  color: var(--clr-grey-5);
}

.hero-btn {
  margin-top: 1.25rem;
}

.hero-photo {
    max-width: 25rem;
    max-height: 30rem;
    object-fit: cover;
    border-radius: var(--radius);
    /* to add border behind image so that its not displaying on top of it */
    position: relative;
  }


/* media query */
@media screen and (min-width: 992px){
  .hero-img, .about-img {
    display: block;
    /* set this as position relative, to that the pseudo element is relative to the parent container */
    position: relative;
  }

  .hero-center {
    grid-template-columns: 1fr 1fr;
  }

  /* cant do this on the image itself, have to target parent container */
  /* added about image so it uses the same styling as the hero photo */
  .hero-img::before, .about-img::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    border: 0.25rem solid var(--clr-primary-5);
    top: 2rem;
    right: -2rem;
    border-radius: var(--radius);
  }

}
/*
=============== 
About
===============
*/
/* section title added to globals */
.about-title {
  text-align: left;
  margin-bottom: 2rem;
}

.about-title .underline {
  margin-left: 0;
}

/* parent container */
.about-center {
  display: grid;
  gap: 3rem 2rem;
}

.about-img {
  /* to center the image */
  justify-self: center;
}


/* media query */
/* desktop */
@media screen and (min-width: 992px){
  .about-center {
    grid-template-columns: 1fr 1fr;
  }

  /* to swap the border from being on the right to the left */
  .about-img::before {
    left: -2rem;
  }

  .about-info {
    align-self: center;
  }
}
/*
=============== 
Services
===============
*/
/* bg-grey in globals */
.service {
  background: var(--clr-white);
  padding: 3rem 1.5rem;
  margin-bottom: 2rem;
  border-radius: var(--radius);
  text-align: center;
  transition: var(--transition);
}

.service-icon {
  font-size: 2rem;
  margin-bottom: 1.5rem;
}

.service .underline {
  width: 3rem;
  height: 0.12rem;
  transition: var(--transition);
}

.service p {
  transition: var(--transition);
}

.service:hover {
  background: var(--clr-primary-5);
  color: var(--clr-white);
}

.service:hover p {
  color: var(--clr-white);
}

.service:hover .underline {
  background: var(--clr-white);
}

/* small screen layout setup */
/* you dont know if the phone the user has supports css grid, so its best to use
margins/padding to control spacing in mobile layout rather than using css grid */

/* media query */
@media screen and (min-width: 676px){
  .services-center {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 2rem;
  }
}

@media screen and (min-width: 992px){
  .services-center {
    grid-template-columns: 1fr 1fr 1fr;
  }
}


/*
=============== 
Projects
===============
*/
.projects-text {
  width: 85vw;
  max-width: 30rem;
  margin: 0 auto;
}

.project {
  position: relative;
  background: var(--clr-primary-5);
  border-radius: var(--radius);
  margin-bottom: 2rem;
  cursor: pointer;
}

.project-info {
  text-align: center;
  color: var(--clr-white);
  position: absolute;
  top: 50%;
  left: 50%;
  /* to move project info in the center of card */
  transform: translate(-50%, -50%);
  transition: var(--transition);
  /* set this to 0 to hide project info until you hover */
  opacity: 0;
}

.project-info {
  text-transform: capitalize;
  color: var(--clr-white);
}

.project:hover .project-info {
  /* brings project info to the forefront so it can be seen over the image */
  opacity: 1;
}

.project-img {
  transition: var(--transition);
  border-radius: var(--radius);
  height: 15rem;
  object-fit: cover;
}

.project:hover .project-img {
  /* set opacity to img so the the project info can be clearly seen in the forefront */
  opacity: 0.1;
}

.project::after {
  content:"";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0.25rem solid var(--clr-white);
  border-radius: var(--radius);
  transition: var(--transition);
  /* to hide by default */
  opacity: 0;
}

/* target the project after element after we hover */
.project:hover::after {
  opacity: 1;
  transform: scale(0.8);
}

/* media query */
@media screen and (min-width: 676px){
  .projects-center {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 2rem;
  }
}

@media screen and (min-width: 992px){
  .projects-center {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* grid template areas */
@media screen and (min-width: 1170px){
  .projects-center {
    grid-template-rows: 200px 200px;
    gap: 1rem;
    grid-template-areas: 
    "a b b"
    "a c d";
  }

  /* height was previously set to 15rem, so we have to change it to 100% */
  .project-img {
    height: 100%;
  }

  .project {
    height: 100%;
  }

  .project-1{
    grid-area: a;
  }

  .project-2 {
    grid-area: b;
  }

  .project-3 {
    grid-area: c;
  }

  .project-4 {
    grid-area: d;
  }
}
/*
=============== 
Connect
===============
*/
.connect {
  min-height: 40vh;
  /* set to relative because its the parent of the video container */
  position: relative;
  padding: 10rem 0 5rem 0;
  margin: 5rem 0;
}

.video-container {
  /* set to absolute because*/
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* to cover whole parent container because some devices the video may not cover whole container*/
  object-fit: cover;
  /* puts the video at the lowest, then the after is set to -1, so the banner is on top of both */
  z-index: -2;
}

/* to set overlay over video */
.connect::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* set opacity because adding the white background completely covers the video, the opacity
  makes it lighter */
  background: var(--clr-white);
  opacity: 0.7;
  /* or intead of setting background and opacity, you can just use rgba to set a dark overlay over video */
  /* the downside to adding this overlay is that the user no longer has control */
  /* background: rgba(0, 0, 0, 0.6); */
  /* set this to -1 because setting the banner text to position relative the overlay is still on top, setting this to -1 the video */
  z-index: -1;
}

.connect {
  display: grid;
  place-items: center;
  /* added slanted shape to connect container */
  clip-path: polygon(100% 15%, 0 0, 0 85%, 100% 100%);
}

.video-banner .section-title {
  margin-bottom: 2rem;
}

.video-text {
  max-width: 30rem;
}
/* the ::after is placed after the content so that is why the banner text does not show up, since the ::after is styled with position absolute already, we cant position the video banner as absolute, so it has to be relative to get back to the normal flow of the document, the overlay is still on stop so that is why the text has overlay over it.*/
.video-banner {
  /* once you add the z-indexes to control the order, you no longer need position relative */
  /* position: relative; */
  background: var(--clr-primary-10);
  /* these paddings are added like this because we're adding shapes later */
  padding: 3rem 5rem 12rem 5rem;
  text-align: center;
  /* added message box around video banner */
  clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%);
}
/*
=============== 
Skills
===============
*/
@media screen and (min-width: 768px) {
  .skills-center {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 2rem;
  }
}
.skills {
  background: var(--clr-primary-9);
}

.skills h3 {
  margin: 1.5rem 0;
  color: var(--clr-primary-1);
}

/* parent container */
.skill {
  margin-bottom: 1.25rem;
}

.skill p {
  margin-bottom: 0.5rem;
  text-transform: capitalize;
  color: var(--clr-primary-1);
}

.skill-container {
  background: var(--clr-white);
  height: 1rem;
  width: 100%;
  border-radius: var(--radius);
  /* set this as relative because it is the parent */
  position: relative;
}

.skill-value {
  /* set this a absolute because it is the child */
  position: absolute;
  top: 0;
  left: 0;
  background: var(--clr-primary-5);
  height: 100%;
  /* to set progress bar to 50% */
  width: 50%;
  border-radius: var(--radius);
}

/* to set progress bar to 70% */
.value-70 {
  width: 70%;
}

/* to set progress bar to 80% */
.value-80 {
  width: 80%;
}

.skill-text {
  /* to place percentage text on top of progress bar */
  position: absolute;
  top: -2rem;
  left: 50%;
  /* to move the text exactly on top of the edge of the colored part */
  transform: translateX(-50%);
}

.skill-text-70 {
  left: 70%;
}

.skill-text-80 {
  left: 80%;
  /* transform: translateX(-50); */
}
/*
=============== 
Timeline
===============
*/
.timeline-center {
  width: 80vw;
  max-width: 40rem;
}

.timeline-item {
  border-top: 2px dashed var(--clr-primary-5);
  margin: 0;
  padding: 4rem 2rem;
  /* position relative is for the numbers (1-6) on the side */
  position: relative;
}

.timeline p {
  margin-bottom: 0;
}

.timeline-item:nth-child(even) {
  border-left:  2px dashed var(--clr-primary-5);
  border-top-left-radius: 2rem;
  border-bottom-left-radius: 2rem;
  /* to make right hand side smaller so that the border will curved and wont have the straight line extending past the curve */
  margin-right: 2rem;
  /* make this zero because we added the margin to the right due to the border we can have the text extend all the way because the margin is acting as the padding  */
  padding-right: 0;
}

.timeline-item:nth-child(odd) {
  border-right:  2px dashed var(--clr-primary-5);
  border-top-right-radius: 2rem;
  /* border-bottom-left-radius: 2rem; */
  border-bottom-right-radius: 2rem;
  margin-left: 2rem;
  padding-left: 0;
}

.timeline-item:first-child {
  border-top: 0;
  border-top-right-radius: 0;
}

.timeline-item:last-child {
  border-bottom: 0;
  border-bottom-left-radius: 0;
}

/* to style numbers */
.number {
  position: absolute;
  top: 50%;
  margin-bottom: 0;
  background: var(--clr-primary-5);
  width: 2rem;
  height: 2rem;
  /* to center number inside circle */
  display: grid;
  place-items: center;
  border-radius: 50%;
  color: var(--clr-primary-1);
  font-weight: bold;
}

.timeline-item:nth-child(even) .number{
  left: 0;
  transform: translate(-50%, -50%);
}

.timeline-item:nth-child(odd) .number{
  right: 0;
  transform: translate(50%, -50%);
}
/*
=============== 
Blog
===============
*/
.blog {
  background: var(--clr-grey-10);
}

.card {
  /* must have some kind of height because you will be using position absolute for both front and back cards */
  height: 27rem;
  position: relative;
  /*  */
  perspective: 1500px;
}

.card-side {
  transition: all 2s linear;
  backface-visibility: hidden;
  /* this sets both card front and card back to position absolute since this is their parent container */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* so the opposite side of the card is hidden from view */
  backface-visibility: hidden;
  border-radius: var(--radius);
}

.card-front {
  background: var(--clr-white);
}

.card-back {
  background: var(--clr-primary-10);
  transform: rotateY(180deg);
  display: grid;
  place-items: center;
}

.card:hover .card-front {
  transform: rotateY(-180deg);
}

.card:hover .card-back {
  transform: rotateY(0);
}

/* rest of the styles */
.card-info {
  padding: 1rem 1.5rem;
}

.card-front img {
  height: 13rem;
  object-fit: cover;
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
}

.card-footer img {
  width: 2rem;
  height: 2rem;
  object-fit: cover;
  border-radius: 50%;
}

.card-footer {
  display: grid;
  grid-template-columns: auto 1fr;
  align-items: center;
}

.card-footer p {
  margin-bottom: 0;
  text-transform: uppercase;
  justify-self: end;
  color: var(--clr-primary-5);
  font-size: 0.85rem;
}

.blog-center {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));
  gap: 3rem 1rem;
}
/*
=============== 
Footer
===============
*/
.footer {
  padding-bottom: 2rem;
  background: #222;
  display: grid;
  place-items: center;
}

.footer .social-icons {
  margin-bottom: 2rem;
  
}

.footer .social-icon {
  color: var(--clr-primary-5);
}

.footer .social-icon:hover {
  color: var(--clr-primary-10);
}

.footer p {
  font-size: 1.25rem;
  text-transform: capitalize;
}
/*
=============== 
Single Page
===============
*/
.single-page {
  background: var(--clr-primary-10);
  min-height: calc(100vh - 5rem - 198px);
}

.page-info {
  max-width: 700px;
}

.page-info a {
  text-transform: uppercase;
  color: var(--clr-primary-5);
  transition: --transition;
}

.page-info a:hover {
  color: var(--clr-primary-1);
}

/*
=============== 
Products Page
===============
*/
